// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LaunchpadsColumns holds the columns for the "launchpads" table.
	LaunchpadsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "is_ready", Type: field.TypeBool, Default: false},
		{Name: "minter_contract", Type: field.TypeJSON},
		{Name: "whitelisted_sale_open", Type: field.TypeBool, Default: false},
		{Name: "public_sale_open", Type: field.TypeBool, Default: false},
		{Name: "is_sold_out", Type: field.TypeBool, Default: false},
		{Name: "is_canceled", Type: field.TypeBool, Default: false},
		{Name: "project_launchpad", Type: field.TypeInt, Unique: true},
	}
	// LaunchpadsTable holds the schema information for the "launchpads" table.
	LaunchpadsTable = &schema.Table{
		Name:       "launchpads",
		Columns:    LaunchpadsColumns,
		PrimaryKey: []*schema.Column{LaunchpadsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "launchpads_projects_launchpad",
				Columns:    []*schema.Column{LaunchpadsColumns[7]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MintsColumns holds the columns for the "mints" table.
	MintsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "min_value_per_tx", Type: field.TypeString},
		{Name: "max_value_per_tx", Type: field.TypeString},
		{Name: "minter_address", Type: field.TypeString},
		{Name: "project_mint", Type: field.TypeInt, Unique: true},
	}
	// MintsTable holds the schema information for the "mints" table.
	MintsTable = &schema.Table{
		Name:       "mints",
		Columns:    MintsColumns,
		PrimaryKey: []*schema.Column{MintsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "mints_projects_mint",
				Columns:    []*schema.Column{MintsColumns[4]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "address", Type: field.TypeString},
		{Name: "slot", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString},
		{Name: "value_decimal", Type: field.TypeInt},
		{Name: "forecasted_apr", Type: field.TypeString, Nullable: true},
		{Name: "total_value", Type: field.TypeString},
		{Name: "payment_token", Type: field.TypeJSON},
		{Name: "metadata", Type: field.TypeJSON},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "project_address_slot",
				Unique:  true,
				Columns: []*schema.Column{ProjectsColumns[1], ProjectsColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LaunchpadsTable,
		MintsTable,
		ProjectsTable,
	}
)

func init() {
	LaunchpadsTable.ForeignKeys[0].RefTable = ProjectsTable
	MintsTable.ForeignKeys[0].RefTable = ProjectsTable
}
