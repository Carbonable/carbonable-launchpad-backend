// Code generated by ent, DO NOT EDIT.

package ent

import (
	"github.com/carbonable/carbonable-launchpad-backend/ent/launchpad"
	"github.com/carbonable/carbonable-launchpad-backend/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	launchpadFields := schema.Launchpad{}.Fields()
	_ = launchpadFields
	// launchpadDescIsReady is the schema descriptor for is_ready field.
	launchpadDescIsReady := launchpadFields[0].Descriptor()
	// launchpad.DefaultIsReady holds the default value on creation for the is_ready field.
	launchpad.DefaultIsReady = launchpadDescIsReady.Default.(bool)
	// launchpadDescWhitelistedSaleOpen is the schema descriptor for whitelisted_sale_open field.
	launchpadDescWhitelistedSaleOpen := launchpadFields[2].Descriptor()
	// launchpad.DefaultWhitelistedSaleOpen holds the default value on creation for the whitelisted_sale_open field.
	launchpad.DefaultWhitelistedSaleOpen = launchpadDescWhitelistedSaleOpen.Default.(bool)
	// launchpadDescPublicSaleOpen is the schema descriptor for public_sale_open field.
	launchpadDescPublicSaleOpen := launchpadFields[3].Descriptor()
	// launchpad.DefaultPublicSaleOpen holds the default value on creation for the public_sale_open field.
	launchpad.DefaultPublicSaleOpen = launchpadDescPublicSaleOpen.Default.(bool)
	// launchpadDescIsSoldOut is the schema descriptor for is_sold_out field.
	launchpadDescIsSoldOut := launchpadFields[4].Descriptor()
	// launchpad.DefaultIsSoldOut holds the default value on creation for the is_sold_out field.
	launchpad.DefaultIsSoldOut = launchpadDescIsSoldOut.Default.(bool)
	// launchpadDescIsCanceled is the schema descriptor for is_canceled field.
	launchpadDescIsCanceled := launchpadFields[5].Descriptor()
	// launchpad.DefaultIsCanceled holds the default value on creation for the is_canceled field.
	launchpad.DefaultIsCanceled = launchpadDescIsCanceled.Default.(bool)
}
